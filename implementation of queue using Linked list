class Queue {
	// Define the data members
    Node * head;
    Node* tail;
    int size;
   public:
    Queue() {
		// Implement the Constructor
        head =NULL;
        tail = NULL;
        size=0;
	}
	
	/*----------------- Public Functions of Stack -----------------*/

	int getSize() {
		// Implement the getSize() function
        return size;
	}

    bool isEmpty() {
		// Implement the isEmpty() function
        return size==0;
	}

    void enqueue(int data) {
		// Implement the enqueue() function
        Node * temp = new Node(data);
        if(head == NULL){
            head = temp;
            tail = head;
            size++;
            return;
            
        }
        size++;
        
        tail -> next = temp;
        tail = temp;
	}

    int dequeue() {
        // Implement the dequeue() function
        if(size == 0){
            return -1;
        }
        int t = head->data;
        Node *temp = head;
        size--;
        head = head->next;
        
        delete temp;
        return t;
        
    }

    int front() {
        // Implement the front() function
        if(isEmpty()){
            return -1;
        }
        return head->data;
        
    }
};
