void createHeap(int arr[], int i){
    int childIndex = i;
    
    while(childIndex > 0){
        int parentIndex = (childIndex-1)/2;
        
        if(arr[childIndex] < arr[parentIndex]){
            int temp = arr[childIndex];
            arr[childIndex] = arr[parentIndex];
            arr[parentIndex] = temp;
        } 
        else {
            break;
        }
        
        childIndex = parentIndex;
    }
}


void removeMin(int arr[], int size){
    if(size <= 1){
        return;
    }
    int ans = arr[0];
    arr[0] = arr[size-1];
    arr[size-1] = ans;
    size--;
    
    int parentIndex = 0;
    int leftChildIndex = 2*parentIndex+1;
    int rightChildIndex = 2*parentIndex+2;
    
    while(leftChildIndex < size){
        int minIndex = parentIndex;
        
        if(arr[leftChildIndex] < arr[minIndex]){
            minIndex = leftChildIndex;
        } 
        
        if(arr[rightChildIndex] < arr[minIndex] && rightChildIndex < size){
            minIndex = rightChildIndex;
        }
        
        if(minIndex == parentIndex){
            break;
        }
        
        int temp = arr[minIndex];
        arr[minIndex] = arr[parentIndex];
        arr[parentIndex] = temp;
        
        parentIndex = minIndex;
        leftChildIndex = 2*parentIndex+1;
        rightChildIndex = 2*parentIndex+2;
    }
}


void heapSort(int arr[], int n) {
    // Write your code
    
    for(int i=1; i<n; i++){
        createHeap(arr, i);
    }
    
    for(int i=0; i<n; i++){
        removeMin(arr,n-i);
    }
    
    
}
