#include<bits/stdc++.h>
using namespace std;

bool findPosition(int input[9][9], int &row,int &col){
    
    for(int i=0; i<9; i++){
        for(int j=0; j<9; j++){
            if(input[i][j] == 0){
                row = i;
                col = j;
                return true;
            }
        }
        
    }
    return false;
}

bool isSafeRow(int input[9][9], int row,int num){
    for(int i=0; i<9; i++){
        if(input[row][i] == num){
            return false;
        }
    }
    
    return true;
}

bool isSafeCol(int input[9][9], int col, int num){
    for(int i=0; i<9; i++){
        if(input[i][col] == num){
            return false;
        }
    }
    
    return true;
}

bool isSafeBox(int input[9][9], int row, int col, int num){
    int rowFactor = row-(row%3);
    int colFactor = col-(col%3);
    
    for(int i=0; i<3; i++){
        for(int j=0; j<3; j++){
            if(input[i+rowFactor][j+colFactor] == num){
                return false;
            }
        }
    }
    
    return true;
}

bool isSafe(int input[9][9], int row, int col, int num){
    if(isSafeRow(input,row,num) && isSafeCol(input,col,num) && isSafeBox(input,row,col,num)){
        return true;
    }
    
    return false;
}

bool sudokuSolver(int input[9][9]){
    int row,col;
    if(!findPosition(input,row,col)){
        return true;
    }
    
    for(int i=1; i<=9; i++){
        if(isSafe(input,row,col,i)){
            input[row][col] = i;
            if(sudokuSolver(input)){
                return true;
            }
            input[row][col] = 0;
        }
    }
    return false;
   
}

int main(){
    
    // write your code here
    int input[9][9];
    for(int i=0;  i<9; i++){
        for(int j=0; j<9; j++){
            cin>>input[i][j];
        }
    }
    
    if(sudokuSolver(input)){
        cout<<"true";
    } else {
        cout<<"false";
    }
    return 0;
}
