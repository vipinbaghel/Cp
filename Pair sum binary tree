#include<bits/stdc++.h>
#include<vector>
void makeArray(BinaryTreeNode<int> *root, vector<int> &v){
    if(root == NULL){
        return;
    }
    
    v.push_back(root->data);
    vector<int> left;
    makeArray(root->left,v);
    vector<int> right;
    makeArray(root->right,v);
    for(int i=0; i<left.size(); i++){
        v.push_back(left[i]);
    }
    
    for(int i=0; i<right.size(); i++){
        v.push_back(right[i]);
    }
}


void pairSum(BinaryTreeNode<int> *root, int sum) {
    // Write your code here
    
    vector<int> v;
    makeArray(root,v);
    sort(v.begin(), v.end());
    int i=0;
    int j=v.size()-1;
    
    while(i<j){
        if(v[i]+v[j] == sum){
            cout<<v[i]<<" "<<v[j]<<endl;
            i++;
            j--;
            
        } else if(v[i] + v[j] > sum){
            j--;
        } else {
            i++;
        }
    }
}
