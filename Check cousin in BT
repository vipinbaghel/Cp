int level(BinaryTreeNode<int>* root, int x){
    if(root == NULL){
        return 0;
    }
    if(root->data == x){
        return 1;
    }
    int leftAns = level(root->left,x);
    if(leftAns != 0){
        return leftAns+1;
    }
    
    int rightAns = level(root->right,x);
    if(rightAns != 0){
        return rightAns+1;
    }
    return 0;
}

bool isSiblings(BinaryTreeNode<int> *root, int a, int b){
    if(root == NULL){
        false;
    } 
    
    if(root -> left == NULL || root->right == NULL ){
        return false;
    }
    
    if((root -> left->data == a && root -> right->data == b) || (root -> left->data == b && root->right->data == a)){
        return true;
    } 
    
    return isSiblings(root->left,a,b) || isSiblings(root->right,a,b);
}

bool isCousin(BinaryTreeNode<int> *root, int p, int q) {
    // Write your code here
    if(level(root,p) == 0  || level(root,p) == 1){
        return false;
    }
    if(level(root,p) == level(root,q) && !isSiblings(root,p,q)){
        return true;
    } else {
        return false;
    }

}
